apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  name: essentials
  namespace: {{cookiecutter.argocd_namespace}}
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=default"]
  generators:
    - matrix:
        generators:
          - git:
              repoURL: {{cookiecutter.gitops_repo_url}}
              revision: "HEAD"
              requeueAfterSeconds: 20
              files:
                - path: "essentials/**/config.yaml"
              values:
                project: "{{ '{{' }}index .path.segments 1{{ '}}' }}"
                app_path: "{{ '{{' }}.path.path{{ '}}' }}"
                name: "{{ '{{' }}.path.basename{{ '}}' }}"
          - clusters: {}
  template:
    metadata:
      name: '{{ '{{' }} default ( printf "%s-%s" .name ( .values.app_path | replace "/" "-" | trimPrefix ( printf "essentials-%s-" .values.project ) ) ) .appName {{ '}}' }}'
      namespace: {{cookiecutter.argocd_namespace}}
    spec:
      destination:
        namespace: '{{ '{{' }} default ( .values.app_path | replace "/" "-" | trimPrefix ( printf "essentials-%s-" .values.project ) ) .destNamespace {{ '}}' }}'
        name: '{{ '{{' }} default .name .destServer {{ '}}' }}'
      project: '{{ '{{' }}.values.project{{ '}}' }}'
      source:
        repoURL: '{{ '{{' }} default "{{cookiecutter.gitops_repo_url}}" .repoURL {{ '}}' }}'
        targetRevision: '{{ '{{' }} default "HEAD" .srcTargetRevision {{ '}}' }}'
        path: '{{ '{{' }} default .values.app_path .srcPath {{ '}}' }}'
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        retry:
          limit: 30
          backoff:
            duration: 20s
            factor: 1
            maxDuration: 20s
        syncOptions:
        - CreateNamespace=true
  templatePatch: |
    metadata:
      labels:
        app.kubernetes.io/name: '{{ '{{' }}.values.app_path | replace "/" "-" | trimPrefix (printf "apps-%s-%s-" .name .values.project){{ '}}' }}'
        {{ '{{' }}- range $key, $value := .labels {{ '}}' }}
        {{ '{{' }} $key {{ '}}' }}: {{ '{{' }} $value | quote {{ '}}' }}
        {{ '{{' }}- end {{ '}}' }}
      annotations:
        {{ '{{' }}- range $key, $value := .annotations {{ '}}' }}
        {{ '{{' }} $key {{ '}}' }}: {{ '{{' }} $value | quote {{ '}}' }}
        {{ '{{' }}- end {{ '}}' }}
    spec:
      syncPolicy:
        automated:
        {{ '{{' }}- if ne .autoSync false {{ '}}' }}
          allowEmpty: true
          prune: false
          selfHeal: false
        {{ '{{' }}- end {{ '}}' }}
  syncPolicy: {}
